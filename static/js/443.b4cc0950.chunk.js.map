{"version":3,"file":"static/js/443.b4cc0950.chunk.js","mappings":"iLAGA,MA8CA,EA9CoBA,KAClB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAASC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,IAC5EC,EAAOC,IAAYL,EAAAA,EAAAA,UAAS,OAC5BM,EAAUC,IAAeP,EAAAA,EAAAA,UAAS,KAClCQ,EAAOC,IAAYT,EAAAA,EAAAA,UAAS,CAACU,IAAK,EAAGC,IAAK,MA0BjD,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0DACHR,IAAYS,EAAAA,EAAAA,KAAA,KAAAD,SAAIR,KACjBS,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAClBE,MAAMC,KAAK,CAACC,OAAQ,MAAM,CAACC,EAAGC,IAAMA,EAAI,IAAGC,KAAKC,IAC/CP,EAAAA,EAAAA,KAAA,UAAqBQ,SAAUD,EAASd,EAAME,KAAOY,EAASd,EAAMG,IAAKa,QAASA,IA9BrEF,KAEnB,GADAjB,EAASiB,GACLA,IAAWxB,EACbS,EAAY,wCAADkB,OAA+BH,EAAM,UAC3C,CAEL,IAAII,EADazB,KAAK0B,IAAIL,EAASxB,IACP,GAAK,mBAAW,oBACxCwB,EAASxB,GACXS,EAAY,yBAADkB,OAAgBC,IAC3BjB,GAASmB,IAAI,IAASA,EAAMlB,IAAKY,EAAS,QAE1Cf,EAAY,0BAADkB,OAAiBC,IAC5BjB,GAASmB,IAAI,IAASA,EAAMjB,IAAKW,EAAS,MAE9C,GAgB8FO,CAAYP,GAAQR,SACzGQ,GADUA,QAKjBP,EAAAA,EAAAA,KAAA,UAAQF,UAAU,eAAeW,QAlBnBM,KAChB/B,EAAgBE,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GAClDE,EAAS,MACTE,EAAY,IACZE,EAAS,CAACC,IAAK,EAAGC,IAAK,KAAK,EAc0BG,SAAC,iBACjD,C,gDC5CV,SAAiB,C","sources":["Number_guess/Number_guess.js","webpack://game-arcade/./src/Number_guess/Number_guess.css?097a"],"sourcesContent":["import React, { useState } from 'react';\nimport './Number_guess.css'; \n\nconst NumberGuess = () => {\n  const [targetNumber, setTargetNumber] = useState(Math.floor(Math.random() * 100) + 1);\n  const [guess, setGuess] = useState(null);\n  const [feedback, setFeedback] = useState('');\n  const [range, setRange] = useState({min: 1, max: 100});\n\n  const handleGuess = (number) => {\n    setGuess(number);\n    if (number === targetNumber) {\n      setFeedback(`🎉 Correct! The number was ${number}.`);\n    } else {\n      const distance = Math.abs(number - targetNumber);\n      let hotOrCold = distance <= 10 ? '🔥 Hot' : '❄️ Cold';\n      if (number < targetNumber) {\n        setFeedback(`📈 Too low! ${hotOrCold}`);\n        setRange(prev => ({...prev, min: number + 1}));\n      } else {\n        setFeedback(`📉 Too high! ${hotOrCold}`);\n        setRange(prev => ({...prev, max: number - 1}));\n      }\n    }\n  };\n\n  const resetGame = () => {\n    setTargetNumber(Math.floor(Math.random() * 100) + 1);\n    setGuess(null);\n    setFeedback('');\n    setRange({min: 1, max: 100});\n  };\n\n  return (\n    <div className=\"game-box\">\n      <h2>Guess the Number 🕵️‍♂️</h2>\n      {feedback && <p>{feedback}</p>}\n      <div className=\"grid\">\n        {Array.from({length: 100}, (_, i) => i + 1).map((number) => (\n          <button key={number} disabled={number < range.min || number > range.max} onClick={() => handleGuess(number)}>\n            {number}\n          </button>\n        ))}\n      </div>\n      <button className=\"reset-button\" onClick={resetGame}>Reset Game</button>\n    </div>\n  );\n};\n\nexport default NumberGuess;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["NumberGuess","targetNumber","setTargetNumber","useState","Math","floor","random","guess","setGuess","feedback","setFeedback","range","setRange","min","max","_jsxs","className","children","_jsx","Array","from","length","_","i","map","number","disabled","onClick","concat","hotOrCold","abs","prev","handleGuess","resetGame"],"sourceRoot":""}